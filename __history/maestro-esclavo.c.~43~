#include <18F4620.h>
#include <stdlib.h>

#use delay(clock=16000000)
#fuses HS, NOWDT, NOPROTECT, PUT, BROWNOUT, NOLVP, NOMCLR

#use i2c(Master, Fast, sda=PIN_C4, scl=PIN_C3)

#define RTC_DS1307_WRITTE_ADD 0xD0
#define RTC_DS1307_READ_ADD 0xD1
#define INIT_READ_CLOCK 0x00
#define INIT_READ_DATE 0x03
#define ACK_ACUSE 0

//int BufferDatos[9];
//int cont_Buff = 0;
int hrs = 0, min = 0, sec = 0;
int year = 0, month = 0, day = 0, date = 0;
int banderaDate = 0;
char bandera, caracter;
int banderaSerial = 0;

#define __DEBUG_SERIAL__

#ifdef __DEBUG_SERIAL__
   #define TX_232        PIN_C6
   #define RX_232        PIN_C7
   #use RS232(BAUD=9600, XMIT=TX_232, BITS=8, PARITY=N, STOP=1, UART1, RCV=RX_232)
   #use fast_io(c)
#endif

#bit banderaSerial = bandera.0
#INT_RDA

void itrRDA(void)
{
   caracter = getc();
   banderaSerial = 1;
}

int converBCD(BYTE bcd);
void rtc_get_time(BYTE& hr, BYTE& min, BYTE& sec, int &banderaDate);
void rtc_get_date(BYTE& year, BYTE& month, BYTE& day, BYTE& date, int &banderaDate);

void main(void)
{
   enable_interrupts(GLOBAL | INT_SSP);
   set_tris_c(0x19);
   rtc_get_time(hrs, min, sec, banderaDate);
   rtc_get_date(year, month, day, date, banderaDate);
   
   while(TRUE)
   {
      if(banderaDate == 1)
      {
         banderaDate = 0;
         printf("La fecha es: ");
         printf("%u / %u / %u",day,month,year);
         printf("\n\r");
         printf("La hora es: ");
         printf("%u horas, %u minutos, %u segundos",hrs,min,sec);
         printf("\n\r")
/*         printf("Deseas cambiar la fecha [S] Si, [N] No: ");
         
         if(caracter == 'S' || caracter == 's')
         {
            
         }*/
      }
   }
}

int converBCD(BYTE bcd)
{
   int cambia = 0;
   cambia = bcd;
   cambia >>= 1;
   cambia &= 0x78;
   
   return(cambia + (cambia>>2) + (bcd & 0x0f));
}

void rtc_get_time(BYTE& hrs, BYTE& min, BYTE& sec, int &banderaDate) 
{
   i2c_start();   //Escritura
   i2c_write(RTC_DS1307_WRITTE_ADD);  //Codigo de escritura
   i2c_write(INIT_READ_CLOCK);  //Puntero de la primera dirección
   i2c_start();   //Lectura
   i2c_write(RTC_DS1307_READ_ADD);  //Codigo de lectura
   sec = converBCD(i2c_read()&0x7f); //Lectura de los 7 bit de los segundos
   min = converBCD(i2c_read()&0x7f); //Lectura de los 7 bit de los minutos
   hrs = converBCD(i2c_read(ACK_ACUSE)&0x3f); //Lectura de los 7 bit de las horas
   i2c_stop(); //Finaliza comunicación
   banderaDate = 1;
}

void rtc_get_date(BYTE& year, BYTE& month, BYTE& date, BYTE& day, int &banderaDate) 
{
   i2c_start();
   i2c_write(RTC_DS1307_WRITTE_ADD);
   i2c_write(INIT_READ_DATE);
   i2c_start();
   i2c_write(RTC_DS1307_READ_ADD);
   day = converBCD(i2c_read()&0x2f);
   date = converBCD(i2c_read()&0x3f);
   month = converBCD(i2c_read()&0x3f);
   year = converBCD(i2c_read(ACK_ACUSE)&0x7f);
   i2c_stop();
   banderaDate = 1;
}
